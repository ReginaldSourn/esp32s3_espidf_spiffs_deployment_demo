name: ESP32-S3 CI/CD Pipeline with ESP-IDF Action

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allows manual triggering

env:
  FIRMWARE_VERSION: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup ESP-IDF
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v5.3.1
        target: esp32s3
        path: ''  # Path to project directory, empty means root directory
      
    
      
    - name: Create firmware package
      if: success()
      run: |
        mkdir -p firmware-package
        cp build/bootloader/bootloader.bin firmware-package/
        cp build/*.bin firmware-package/
        cp build/*.elf firmware-package/
        cp build/*.map firmware-package/
        
        # Create version.txt with build info
        echo "Firmware version: ${FIRMWARE_VERSION:-dev}" > firmware-package/version.txt
        echo "Build date: $(date)" >> firmware-package/version.txt
        echo "Commit: ${{ github.sha }}" >> firmware-package/version.txt
        
        # Create a zip archive
        sudo apt-get update && sudo apt-get install -y zip
        zip -r esp32s3-spiffs.zip firmware-package/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: esp32s3-spiffs
        path: esp32s3-spiffs.zip
        if-no-files-found: error

  deploy-development:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: esp32s3-spiffs
      
      - name: Deploy to development environment
        run: |
          echo "Deploying firmware to development server..."
          # Example: Upload to an FTP server or S3 bucket for development testing
          # This is a placeholder - implement the actual deployment method you need
          # aws s3 cp esp32s3-spiffs.zip s3://your-dev-bucket/esp32s3/latest/
          echo "Deployed to development environment successfully"

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: esp32s3-spiffs
      
      - name: Deploy to staging environment
        run: |
          echo "Deploying firmware to staging server..."
          # Example: Upload to staging environment
          # This is a placeholder - implement the actual deployment method you need
          # aws s3 cp esp32s3-spiffs.zip s3://your-staging-bucket/esp32s3/latest/
          echo "Deployed to staging environment successfully"

  deploy-production:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: esp32s3-spiffs
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: esp32s3-spiffs.zip
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        
      
      - name: Deploy to production environment
        run: |
          echo "Deploying firmware to production server..."
          # Example: Upload to production environment
          # This is a placeholder - implement the actual deployment method you need
          # aws s3 cp esp32s3-spiffs.zip s3://your-production-bucket/esp32s3/${{ github.ref_name }}/
          echo "Deployed to production environment successfully"